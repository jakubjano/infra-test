name: plan

on:
  workflow_dispatch:
    inputs:
      env:
        type: choice
        description: Environment to be planned
        required: true
        options:
          - dev
          - stg
          - prod

env:
  TF_IN_AUTOMATION: true

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: ${{ github.event.inputs.env }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/go-api-template-github-actions-cicd
          role-session-name: GitHubWorkflowCI
      - name: Setup Terraform
        id: setup-terraform
        uses: ./.github/actions/setup-terraform
      - name: Init Terraform
        uses: ./.github/actions/for-env
        with:
          env: ${{ github.event.inputs.env }}
          operation: init
        env:
          TF_PLUGIN_CACHE_DIR: ${{ steps.setup-terraform.outputs.plugin-cache-dir }}
      - name: Terraform Plan
        run: |
          env=${{ github.event.inputs.env }}
          cd environments/$env
          terraform plan -input=false -var-file=$env.tfvars -out plan-$env.out
      - name: Store Artifact
        uses: actions/upload-artifact@v3
        with:
          name: plan-${{ github.event.inputs.env }}.out
          path: environments/${{ github.event.inputs.env }}/plan-${{ github.event.inputs.env }}.out
